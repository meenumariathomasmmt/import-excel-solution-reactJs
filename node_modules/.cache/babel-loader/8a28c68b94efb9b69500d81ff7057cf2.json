{"ast":null,"code":"var _jsxFileName = \"/Users/meenumaria/Desktop/excel-to-json/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { OutTable, ExcelRenderer } from 'react-excel-renderer';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Col, Input, InputGroup, InputGroupAddon, FormGroup, Label, Button, Fade, FormFeedback, Container, Card } from 'reactstrap';\nimport ExcelReader from './components/ExcelReader';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderFile = fileObj => {\n      ExcelRenderer(fileObj, (err, resp) => {\n        if (err) {\n          console.log(err);\n        } else {\n          this.setState({\n            dataLoaded: true,\n            cols: resp.cols,\n            rows: resp.rows\n          });\n        }\n      });\n    };\n\n    this.fileHandler = event => {\n      if (event.target.files.length) {\n        let fileObj = event.target.files[0];\n        let fileName = fileObj.name;\n\n        if (fileName.slice(fileName.lastIndexOf('.') + 1) === \"xlsx\") {\n          this.setState({\n            uploadedFileName: fileName,\n            isFormInvalid: false\n          });\n          this.renderFile(fileObj);\n        } else {\n          this.setState({\n            isFormInvalid: true,\n            uploadedFileName: \"\"\n          });\n        }\n      }\n    };\n\n    this.openFileBrowser = () => {\n      this.fileInput.current.click();\n    };\n\n    this.state = {\n      isOpen: false,\n      dataLoaded: false,\n      isFormInvalid: false,\n      rows: null,\n      cols: null\n    };\n    this.fileHandler = this.fileHandler.bind(this);\n    this.openFileBrowser = this.openFileBrowser.bind(this);\n    this.renderFile = this.renderFile.bind(this);\n    this.fileInput = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"mt-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleFile\",\n      xs: 6,\n      sm: 4,\n      lg: 2,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Upload excel file\"), React.createElement(Col, {\n      xs: 4,\n      sm: 8,\n      lg: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      style: {\n        color: \"white\",\n        zIndex: 0\n      },\n      onClick: this.openFileBrowser.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"cui-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \" Browse\\u2026\"), React.createElement(\"input\", {\n      type: \"file\",\n      hidden: true,\n      onChange: this.fileHandler.bind(this),\n      ref: this.fileInput,\n      onClick: event => {\n        event.target.value = null;\n      },\n      style: {\n        \"padding\": \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.uploadedFileName,\n      readOnly: true,\n      invalid: this.state.isFormInvalid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(FormFeedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Fade, {\n      in: this.state.isFormInvalid,\n      tag: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Please select a .xlsx file only !\")))))), this.state.dataLoaded && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      outline: true,\n      color: \"secondary\",\n      className: \"restrict-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(OutTable, {\n      data: this.state.rows,\n      columns: this.state.cols,\n      tableClassName: \"ExcelTable\",\n      tableHeaderRowClass: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(ExcelReader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/meenumaria/Desktop/excel-to-json/src/App.js"],"names":["React","Component","OutTable","ExcelRenderer","Col","Input","InputGroup","InputGroupAddon","FormGroup","Label","Button","Fade","FormFeedback","Container","Card","ExcelReader","App","constructor","props","renderFile","fileObj","err","resp","console","log","setState","dataLoaded","cols","rows","fileHandler","event","target","files","length","fileName","name","slice","lastIndexOf","uploadedFileName","isFormInvalid","openFileBrowser","fileInput","current","click","state","isOpen","bind","createRef","render","color","zIndex","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {OutTable, ExcelRenderer} from 'react-excel-renderer';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Col, Input, InputGroup, InputGroupAddon, FormGroup, Label, Button, Fade, FormFeedback, Container, Card } from 'reactstrap';\nimport ExcelReader from './components/ExcelReader';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      isOpen: false,\n      dataLoaded: false,\n      isFormInvalid: false,\n      rows: null,\n      cols: null\n    }\n    this.fileHandler = this.fileHandler.bind(this);\n    this.openFileBrowser = this.openFileBrowser.bind(this);\n    this.renderFile = this.renderFile.bind(this);\n    this.fileInput = React.createRef();\n  }\n\n  renderFile = (fileObj) => {\n      ExcelRenderer(fileObj, (err, resp) => {\n        if(err){\n          console.log(err);            \n        }\n        else{\n          this.setState({\n            dataLoaded: true,\n            cols: resp.cols,\n            rows: resp.rows\n          });\n        }\n      }); \n  }\n\n  fileHandler = (event) => {    \n    if(event.target.files.length){\n      let fileObj = event.target.files[0];\n      let fileName = fileObj.name;\n\n      if(fileName.slice(fileName.lastIndexOf('.')+1) === \"xlsx\"){\n        this.setState({\n          uploadedFileName: fileName,\n          isFormInvalid: false\n        });\n        this.renderFile(fileObj)\n      }    \n      else{\n        this.setState({\n          isFormInvalid: true,\n          uploadedFileName: \"\"\n        })\n      }\n    }               \n  }\n\n\n  openFileBrowser = () => {\n    this.fileInput.current.click();\n  }\n\n  render() {\n    return (\n      <div>\n        <Container className=\"mt-100\">\n        <form>\n          <FormGroup row>\n            <Label for=\"exampleFile\" xs={6} sm={4} lg={2} size=\"lg\">Upload excel file</Label>          \n            <Col xs={4} sm={8} lg={10}>                                                     \n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  <Button color=\"success\" style={{color: \"white\", zIndex: 0}} onClick={this.openFileBrowser.bind(this)}><i className=\"cui-file\"></i> Browse&hellip;</Button>\n                  <input type=\"file\" hidden onChange={this.fileHandler.bind(this)} ref={this.fileInput} onClick={(event)=> { event.target.value = null }} style={{\"padding\":\"10px\"}} />                                \n                </InputGroupAddon>\n                <Input type=\"text\" className=\"form-control\" value={this.state.uploadedFileName} readOnly invalid={this.state.isFormInvalid} />                                              \n                <FormFeedback>    \n                  <Fade in={this.state.isFormInvalid} tag=\"h6\">\n                    Please select a .xlsx file only !\n                  </Fade>                                                                \n                </FormFeedback>\n              </InputGroup>     \n            </Col>                                                   \n          </FormGroup>   \n        </form>\n\n        {this.state.dataLoaded && \n        <div>\n          <Card body outline color=\"secondary\" className=\"restrict-card\">\n            \n              <OutTable data={this.state.rows} columns={this.state.cols} tableClassName=\"ExcelTable\" tableHeaderRowClass=\"heading\" />\n            \n          </Card>  \n        </div>}\n        <ExcelReader/>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}