{"ast":null,"code":"var _jsxFileName = \"/Users/meenumaria/import-excel/src/App.js\";\nimport React from 'react';\nimport './App.css'; //import {useCallback} from 'react';\n\nimport { useDropzone } from 'react-dropzone'; //import * as XLSX from 'xlsx';\n\nimport { OutTable, ExcelRenderer } from 'react-excel-renderer';\n\nfunction App() {\n  const _useDropzone = useDropzone({\n    accept: '.xlsx, .xls, .csv',\n    minSize: 0\n  }),\n        acceptedFiles = _useDropzone.acceptedFiles,\n        getRootProps = _useDropzone.getRootProps,\n        getInputProps = _useDropzone.getInputProps,\n        isDragActive = _useDropzone.isDragActive; // const files = acceptedFiles.map(file => (\n  //   <p key={file.path}>\n  //     {file.path} has uploaded\n  //   </p>\n  // ));\n\n\n  const files = acceptedFiles.shift();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), isDragActive ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Drop the files here ...\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Drag 'n' drop some files here, or click to select files\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, files)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/meenumaria/import-excel/src/App.js"],"names":["React","useDropzone","OutTable","ExcelRenderer","App","accept","minSize","acceptedFiles","getRootProps","getInputProps","isDragActive","files","shift"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CACA;;AACA,SAAQC,WAAR,QAA0B,gBAA1B,C,CACA;;AACA,SAAQC,QAAR,EAAkBC,aAAlB,QAAsC,sBAAtC;;AAGA,SAASC,GAAT,GAAe;AAAA,uBACsDH,WAAW,CAAC;AAC7EI,IAAAA,MAAM,EAAE,mBADqE;AAE7EC,IAAAA,OAAO,EAAE;AAFoE,GAAD,CADjE;AAAA,QACNC,aADM,gBACNA,aADM;AAAA,QACSC,YADT,gBACSA,YADT;AAAA,QACuBC,aADvB,gBACuBA,aADvB;AAAA,QACsCC,YADtC,gBACsCA,YADtC,EAOb;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,KAAK,GAAGJ,aAAa,CAACK,KAAd,EAAd;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6CAASJ,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAGIC,YAAY,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADU,GAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DALN,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,KAAJ,CADF,CATF,CADF;AAgBD;;AAED,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n//import {useCallback} from 'react';\nimport {useDropzone} from 'react-dropzone';\n//import * as XLSX from 'xlsx';\nimport {OutTable, ExcelRenderer} from 'react-excel-renderer';\n\n\nfunction App() {\n  const {acceptedFiles, getRootProps, getInputProps, isDragActive} = useDropzone({\n    accept: '.xlsx, .xls, .csv',\n    minSize: 0\n  });\n  \n  \n  // const files = acceptedFiles.map(file => (\n  //   <p key={file.path}>\n  //     {file.path} has uploaded\n  //   </p>\n  // ));\n\n  const files = acceptedFiles.shift();\n\n  return (\n    <div>\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        {\n          isDragActive ?\n            <p>Drop the files here ...</p> :\n            <p>Drag 'n' drop some files here, or click to select files</p>\n        }\n      </div>\n      <div>\n        <p>{files}</p>\n        {/* <OutTable data={this.state.rows} columns={this.state.cols} tableClassName=\"ExcelTable2007\" tableHeaderRowClass=\"heading\" /> */}\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}